# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- dev  # TODO

variables:
  - name: cubemx_link
    value: https://sw-center.st.com/packs/resource/library/stm32cube_mx_v561.zip
  - name: cubemx_zip_filename
    value: stm32cube_mx_v561.zip

jobs:
  - job: 'Ubuntu'
    variables:
      CUBEMX_ZIP_CACHE: $(Agent.ToolsDirectory)/stm32cube_mx_v561.zip
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      matrix:
        Python36:
          python.version: '3.6'
        Python37:
          python.version: '3.7'
        Python38:
          python.version: '3.8'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - script: |
        sudo apt install xvfb
        sudo systemctl start xvfb
        export DISPLAY=:99.0
      displayName: 'Set up X virtual frame buffer'

    - task: Cache@1
      inputs:
        key: 'cubemx'
        restoreKeys: cubemx
        path: $(CUBEMX_ZIP_CACHE)
        cacheHitVar: CUBEMX_CACHE_RESTORED
      displayName: Cache CubeMX archive

    - script: wget -O $(CUBEMX_ZIP_CACHE) ${{ variables.cubemx_link }}
      condition: ne(variables.CUBEMX_CACHE_RESTORED, 'true')

    - script: |
        pip install platformio
        unzip -q ${{ variables.cubemx_zip_filename }} -d $(Agent.ToolsDirectory)/cubemx
      displayName: 'Install tools'

    - script: |
        xvfb-run --auto-servernum --server-num=1 python -m unittest -b -v
      displayName: 'Test (unittest)'


#  - job: 'Windows'
#    pool:
#      vmImage: 'windows-latest'
#    strategy:
#      matrix:
#        Python36:
#          python.version: '3.6'
#        Python37:
#          python.version: '3.7'
#        Python38:
#          python.version: '3.8'
#    steps:
#    - task: UsePythonVersion@0
#      inputs:
#        versionSpec: '$(python.version)'
#      displayName: 'Use Python $(python.version)'
#
#    - powershell: |
#        Invoke-WebRequest ${{ variables.cubemx_link }} -OutFile $(Agent.ToolsDirectory)\${{ variables.cubemx_zip_filename }}
#        7z x -o$(Agent.ToolsDirectory)\cubemx $(Agent.ToolsDirectory)\${{ variables.cubemx_zip_filename }}
#        pip install platformio
#      displayName: 'Install tools'
#
#    - script: |
#        python -m unittest -b -v
#      displayName: 'Test (unittest)'
#
#
#  - job: 'macOS'
#    pool:
#      vmImage: 'macOS-latest'
#    strategy:
#      matrix:
#        Python36:
#          python.version: '3.6'
#        Python37:
#          python.version: '3.7'
#        Python38:
#          python.version: '3.8'
#    steps:
#    - task: UsePythonVersion@0
#      inputs:
#        versionSpec: '$(python.version)'
#      displayName: 'Use Python $(python.version)'
#
#    - script: |
#        pip install platformio
#        wget ${{ variables.cubemx_link }}
#        unzip -q ${{ variables.cubemx_zip_filename }} -d $(Agent.ToolsDirectory)/cubemx
#      displayName: 'Install tools'
#
#    - script: |
#        python -m unittest -b -v
#      displayName: 'Test (unittest)'
