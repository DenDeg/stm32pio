# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master
- dev

variables:
  - name: cubemx_version
    value: 560
  - name: cubemx_cache_folder
    value: $(Pipeline.Workspace)/cubemx  # cross-platform location
  - name: cubemx_link
    value: https://sw-center.st.com/packs/resource/library/stm32cube_mx_v$(cubemx_version).zip

stages:
  - stage: Test
    jobs:
      - job: 'Ubuntu'
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          matrix:
            Python36:
              python.version: '3.6'
            Python37:
              python.version: '3.7'
            Python38:
              python.version: '3.8'
        steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(python.version)'
          displayName: 'Use Python $(python.version)'

        - script: |
            sudo apt install xvfb
            sudo systemctl start xvfb
            export DISPLAY=:99.0
          displayName: 'Set up X virtual frame buffer'

        - task: Cache@1
          inputs:
            key: 'cubemx | "$(CUBEMX_VERSION)"'
            restoreKeys: 'cubemx | "$(CUBEMX_VERSION)"'  # we want an exact match
            path: ${{ variables.cubemx_cache_folder }}
            cacheHitVar: CUBEMX_CACHE_RESTORED
          displayName: 'Restore CubeMX cache'

        - script: |
            wget -O cubemx_${{ variables.cubemx_version }}.zip ${{ variables.cubemx_link }}
            unzip -q cubemx_${{ variables.cubemx_version }}.zip -d ${{ variables.cubemx_cache_folder }}
          condition: ne(variables.CUBEMX_CACHE_RESTORED, 'true')
          displayName: 'Download & unzip CubeMX'

        - script: |
            pip install platformio
          displayName: 'Install tools'

        - script: |
            xvfb-run --auto-servernum --server-num=1 python -m unittest
          displayName: 'Test'


      - job: 'Windows'
        pool:
          vmImage: 'windows-latest'
        strategy:
          matrix:
            Python36:
              python.version: '3.6'
            Python37:
              python.version: '3.7'
            Python38:
              python.version: '3.8'
        steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(python.version)'
          displayName: 'Use Python $(python.version)'

        - task: Cache@1
          inputs:
            key: 'cubemx | "$(CUBEMX_VERSION)"'
            restoreKeys: 'cubemx | "$(CUBEMX_VERSION)"'  # we want an exact match
            path: ${{ variables.cubemx_cache_folder }}
            cacheHitVar: CUBEMX_CACHE_RESTORED
          displayName: 'Restore CubeMX cache'

        - powershell: |
            Invoke-WebRequest ${{ variables.cubemx_link }} -OutFile cubemx_${{ variables.cubemx_version }}.zip
            7z x -o${{ variables.cubemx_cache_folder }} cubemx_${{ variables.cubemx_version }}.zip
          condition: ne(variables.CUBEMX_CACHE_RESTORED, 'true')
          displayName: 'Download & unzip CubeMX'

        - script: |
            pip install platformio
          displayName: 'Install tools'

        - script: |
            python -m unittest
          displayName: 'Test'


      - job: 'macOS'
        pool:
          vmImage: 'macOS-latest'
        strategy:
          matrix:
            Python36:
              python.version: '3.6'
            Python37:
              python.version: '3.7'
            Python38:
              python.version: '3.8'
        steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(python.version)'
          displayName: 'Use Python $(python.version)'

        - task: Cache@1
          inputs:
            key: 'cubemx | "$(CUBEMX_VERSION)"'
            restoreKeys: 'cubemx | "$(CUBEMX_VERSION)"'  # we want an exact match
            path: ${{ variables.cubemx_cache_folder }}
            cacheHitVar: CUBEMX_CACHE_RESTORED
          displayName: 'Restore CubeMX cache'

        - script: |
            wget -O cubemx_${{ variables.cubemx_version }}.zip ${{ variables.cubemx_link }}
            unzip -q cubemx_${{ variables.cubemx_version }}.zip -d ${{ variables.cubemx_cache_folder }}
          condition: ne(variables.CUBEMX_CACHE_RESTORED, 'true')
          displayName: 'Download & unzip CubeMX'

        - script: |
            pip install platformio
          displayName: 'Install tools'

        - script: |
            python -m unittest
          displayName: 'Test'


#  - stage: Build
#    jobs:
#      - job: 'Wheel'
#        steps:
#        - script: |
#            pip install wheel
#            python setup.py sdist bdist_wheel


#  - stage: Deploy
#    jobs:
#      - deployment: PyPI
